apply plugin: 'com.android.library'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs project(':mopub-sdk').file('../libs')
    }
    maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
}

project.group = 'com.mopub'
project.version = '4.16.1'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    lintOptions { abortOnError false }
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        versionCode 54
        versionName version
        minSdkVersion 16
        targetSdkVersion 25
        consumerProguardFiles project(':mopub-sdk').file('proguard.txt')
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            aidl.srcDirs = ['src/main']
            renderscript.srcDirs = ['src/main']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    testOptions {
        unitTests {
            // This causes android platform methods from the test JAR
            // to return null, false, etc instead of throwing an exception.
            // We should periodically disable this and tackle the broken tests
            // as it exposes when we are hitting platform APIs in our tests.
            // If these tests *require* platform APIs we may want to make them
            // connected tests instead.
            returnDefaultValues = true

            // Test JVM settings since we have a lot of classes loaded.
            all {
                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m', '-noverify'
                forkEvery 200
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    project(':mopub-sdk').file('proguard.txt')
        }

        debug {
            minifyEnabled false
        }
    }

    // Note: You will also need a local.properties file to set the location of the SDK in the same
    // way that the existing SDK requires, using the sdk.dir property.
    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no
    // difference between the two methods, you can use the one you prefer.
}

dependencies {
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:support-annotations:25.3.1'
}
